# Default values for teable.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/teableio/teable
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 3000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    # nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
    # nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    # nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    # nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
  hosts:
    - host: teable.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: teable-tls
  #    hosts:
  #      - teable.local

resources:
  limits:
    cpu: 2000m
    memory: 4096Mi
  requests:
    cpu: 200m
    memory: 400Mi

initContainer:
  resources:
    limits:
      cpu: 1000m
      memory: 1024Mi
    requests:
      cpu: 100m
      memory: 102Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Teable specific configuration
teable:
  # Application base configuration
  publicOrigin: "https://teable.local"

  # JWT and session secrets
  jwtSecret: "your-jwt-secret-please-change-this"
  sessionSecret: "your-session-secret-please-change-this"

  # Additional environment variables
  env:
    NEXT_ENV_IMAGES_ALL_REMOTE: "true"
    PRISMA_ENGINES_CHECKSUM_IGNORE_MISSING: "1"
    NODE_TLS_REJECT_UNAUTHORIZED: "0"

# Storage configuration
storage:
  provider: "minio"
  publicBucket: "teable-pub"
  privateBucket: "teable-pvt"

  # MinIO configuration
  minio:
    endpoint: "minio.example.com"
    internalEndpoint: "teable-minio"
    port: "443"
    internalPort: "9000"
    useSSL: "true"
    accessKey: "minioadmin"
    secretKey: "minioadmin"

  # Storage prefix (same as endpoint but with protocol)
  prefix: "https://minio.example.com"

# Cache configuration
cache:
  provider: "redis"

# Database configuration
database:
  url: "postgresql://postgres:password@teable-postgresql:5432/teable"

# External service dependencies
postgres:
  enabled: false
  auth:
    postgresPassword: "password"
    database: "teable"
  primary:
    persistence:
      enabled: true
      size: 8Gi

redis:
  enabled: false
  auth:
    enabled: false
  master:
    persistence:
      enabled: true
      size: 8Gi

minio:
  enabled: false
  auth:
    rootUser: "minioadmin"
    rootPassword: "minioadmin"
  defaultBuckets: "teable-pub:public,teable-pvt:none"
  persistence:
    enabled: true
    size: 20Gi
  service:
    type: ClusterIP
    ports:
      api: 9000
      console: 9001

# Health checks configuration
healthCheck:
  enabled: true
  path: "/health"

  startupProbe:
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 30
    successThreshold: 1

  livenessProbe:
    initialDelaySeconds: 30
    periodSeconds: 30
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1

  readinessProbe:
    initialDelaySeconds: 15
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
