# Standalone values for teable - for testing without external dependencies
# This configuration assumes you have external PostgreSQL, Redis, and MinIO available

replicaCount: 1

image:
  repository: ghcr.io/teableio/teable
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 3000

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: teable.local
      paths:
        - path: /
          pathType: Prefix
  tls: []

resources:
  limits:
    cpu: 1000m
    memory: 2048Mi
  requests:
    cpu: 200m
    memory: 400Mi

initContainer:
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 102Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Teable specific configuration
teable:
  # Application base configuration
  publicOrigin: "http://teable.local"

  # JWT and session secrets - CHANGE THESE IN PRODUCTION
  jwtSecret: "standalone-jwt-secret-for-testing-only-change-in-production"
  sessionSecret: "standalone-session-secret-for-testing-only-change-in-production"

  # Additional environment variables
  env:
    NEXT_ENV_IMAGES_ALL_REMOTE: "true"
    PRISMA_ENGINES_CHECKSUM_IGNORE_MISSING: "1"
    NODE_TLS_REJECT_UNAUTHORIZED: "0"

# Storage configuration - Configure these for your external MinIO
storage:
  provider: "minio"
  publicBucket: "teable-pub"
  privateBucket: "teable-pvt"

  # MinIO configuration - UPDATE THESE VALUES
  minio:
    endpoint: "minio.example.com"
    internalEndpoint: "minio.default.svc.cluster.local"
    port: "9000"
    internalPort: "9000"
    useSSL: "false"
    accessKey: "minioadmin"
    secretKey: "minioadmin"

  # Storage prefix
  prefix: "http://minio.example.com:9000"

# Cache configuration
cache:
  provider: "redis"
  # Redis URI - UPDATE THIS VALUE
  redisUri: "redis://localhost:6379/0"

# Database configuration - UPDATE THIS VALUE
database:
  url: "postgresql://postgres:password@localhost:5432/teable"

# Disable all internal services
postgres:
  enabled: false

redis:
  enabled: false

minio:
  enabled: false

# Health checks configuration
healthCheck:
  enabled: true
  path: "/health"

  startupProbe:
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 30
    successThreshold: 1

  livenessProbe:
    initialDelaySeconds: 30
    periodSeconds: 30
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1

  readinessProbe:
    initialDelaySeconds: 15
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
